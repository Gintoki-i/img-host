name: Purge images (manual, recursive)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type YES to confirm deletion'
        required: true
        default: 'NO'
      directory:
        description: 'Root directory to scan (e.g., img)'
        required: false
        default: 'img'
      dry_run:
        description: 'true = list only, false = delete'
        required: false
        default: 'true'

permissions:
  contents: write

jobs:
  purge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Delete all image files (recursive)
        shell: bash
        env:
          CONFIRM: ${{ github.event.inputs.confirm }}
          ROOTDIR: ${{ github.event.inputs.directory }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          set -euo pipefail

          if [[ "${CONFIRM}" != "YES" ]]; then
            echo "Confirmation not provided (type YES). Aborting."
            exit 1
          fi

          dir="${ROOTDIR:-img}"
          mkdir -p "$dir"
          echo "Scan root: $dir"
          echo "DRY_RUN: $DRY_RUN (true=list only, false=delete)"

          # 允许的图片扩展名（大小写不敏感）
          exts='jpg|jpeg|png|webp|gif|bmp|tiff|tif|svg'

          matched=0
          deleted=0

          # 递归查找所有图片文件
          while IFS= read -r -d '' f; do
            base="$(basename "$f")"
            matched=$((matched+1))
            if [[ "${DRY_RUN}" == "false" ]]; then
              echo "Deleting: $f"
              rm -f -- "$f"
              deleted=$((deleted+1))
            else
              echo "[DRY RUN] Would delete: $f"
            fi
          find "$dir" -type f ( -iname '*.jpg'  -o -iname '*.jpeg' -o -iname '*.png'  -o -iname '*.webp'    -o -iname '*.gif' -o -iname '*.bmp'  -o -iname '*.tiff' -o -iname '*.tif' -o -iname '*.svg' \) -print0


          echo "Matched images: $matched"
          echo "Deleted images: $deleted"

      - name: Commit & push if changes
        if: ${{ github.event.inputs.dry_run == 'false' }}
        shell: bash
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: purge all images under ${{ github.event.inputs.directory }}"
            git push
          else
            echo "No changes to commit."
          fi
